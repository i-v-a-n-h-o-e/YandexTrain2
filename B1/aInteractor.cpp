/* STATEMENT
Лена руководит разработкой тестирующей системы, в которой реализованы интерактивные задачи.
До заверщения очередной стадии проекта осталось написать модуль, определяющий итоговый вердикт системы для интерактивной задачи.
 Итоговый вердикт определяется из кода завершения задачи, вердикта интерактора и вердикта чекера по следующим правилам:
Вердикт чекера и вердикт интерактора — это целые числа от 0 до 7 включительно.
Код завершения задачи — это целое число от -128 до 127 включительно.
Если интерактор выдал вердикт 0, итоговый вердикт равен 3 в случае, если программа завершилась с ненулевым кодом, и вердикту чекера в противном случае.
Если интерактор выдал вердикт 1, итоговый вердикт равен вердикту чекера.
Если интерактор выдал вердикт 4, итоговый вердикт равен 3 в случае, если программа завершилась с ненулевым кодом, и 4 в противном случае.
Если интерактор выдал вердикт 6, итоговый вердикт равен 0.
Если интерактор выдал вердикт 7, итоговый вердикт равен 1.
В остальных случаях итоговый вердикт равен вердикту интерактора.
Ваша задача — реализовать этот модуль.

 INPUT
 Входной файл состоит из трёх строк. В первой задано целое число
r (−128 ≤ r ≤ 127) — код завершения задачи, во второй — целое число i (0 ≤ i ≤ 7) — вердикт интерактора, в третьей — целое число
c (0 ≤ c ≤ 7) — вердикт чекера.

 OUTPUT
 Выведите одно целое число от 0 до 7 включительно — итоговый вердикт системы.

 EXAMPLE 1
 input
0
0
0
 output
 0

 EXAMPLE 2
 input
 -1
0
1
 output
3

 EXAMPLE 3
 input
 42
1
6
 output
6

EXAMPLE 4
input
44
7
4
output
 1

 EXAMPLE 5
 input
1
4
0
output
 3

 EXAMPLE 6
 input
 -3
2
4
output
 2
*/
#include <iostream>

using namespace std;

int test_system(int r, int i, int c) {
    if (i == 0) {
        if (r != 0) {
            return 3;
        } else {
            return c;
        }
    }
    if (i == 1) {
        return c;
    }
    if (i == 4) {
        if (r != 0) {
            return 3;
        } else {
            return 4;
        }
    }
    if (i == 6) {
        return 0;
    }
    if (i == 7) {
        return 1;
    }
    return i;
}

int main() {
    int c,i,r;

    cin >> r >> i >> c;
    cout << test_system(r,i,c);
    return 0;
}